准备工作：
	开放80端口
	firewall-cmd --zone=public --add-port=80/tcp --permanent	 开启
	firewall-cmd --zone=public --remove-port=5672/tcp --permanent    关闭
	firewall-cmd --reload            重启
	firewall-cmd --zone=public --list-ports     查看
	yum -y install glibc automake autoconf libtool 

1.Nginx安装
	yum -y install gcc gcc-c++ pcre pcre-devel zlib zlib-devel openssl openssl-devel

	利用winscp上传源码或用wget下载源码

	useradd -M -s /sbin/nologin nginx

	tar -zxvf nginx...
	cd nginx...
	./configure --prefix=/usr/local/nginx --user=nginx --group=nginx --with-http_ssl_module
	make && make install

	cd /usr/local/nginx
	/usr/local/nginx/sbin/nginx -t	查看配置是否生效
	/usr/local/nginx/sbin/nginx	启动
	/usr/local/nginx/sbin/nginx -s reload	重启nginx
	
	ps -ef | grep nginx	查看进程

	添加环境变量，全局使用nginx
	vim /etc/profile  
	export PATH=$PATH:/usr/local/nginx/sbin
	source /etc/profile
	nginx -v          查看版本
	nginx	          启动
	nginx -s reload	  重启
	nginx -s quit     退出
	
	使用systemctl控制nginx服务
	vim /lib/systemd/system/nginx.service
	<<<<<<<<<<<<<<<
	[Unit]
	Description=nginx - high performance web server
	After=network.target remote-fs.target nss-lookup.target

	[Service]
	Type=forking
	ExecStart=/usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf
	ExecReload=/usr/local/nginx/sbin/nginx -s reload
	ExecStop=/usr/local/nginx/sbin/nginx -s stop

	[Install]
	WantedBy=multi-user.target
	>>>>>>>>>>>>>>>>
	systemctl daemon-reload 重启
	systemctl start/stop/restart/enable开机自启/disable停止开机自启/status nginx.service

2.PHP安装
	yum -y install libxml2 libxml2-devel autoconf libjpeg libjpeg-devel libpng libpng-devel freetype freetype-devel zlib zlib-devel glibc glibc-devel glib2 glib2-devel curl curl-devel bzip2 bzip2-devel libxslt libxslt-devel
	
	tar -zxvf php...
	cd php...
	./configure --prefix=/usr/local/php --with-curl --with-freetype-dir --with-gd --with-gettext --with-iconv-dir --with-kerberos --with-libdir=lib64 --with-libxml-dir --with-mysqli --with-openssl --with-pcre-regex --with-pdo-mysql --with-pdo-sqlite --with-pear --with-png-dir --with-jpeg-dir --with-xmlrpc --with-xsl --with-zlib --with-bz2 --with-mhash --enable-fpm --enable-bcmath --enable-libxml --enable-inline-optimization --enable-mbregex --enable-mbstring --enable-opcache --enable-pcntl --enable-shmop --enable-soap --enable-sockets --enable-sysvsem --enable-sysvshm --enable-xml --enable-zip
	make
	make install

	移动源码中的配置文件:
	cp /home/php-7.2.28/php.ini-production /usr/local/php/etc/php.ini
	
	配置php-fpm:
	cp /usr/local/php/etc/php-fpm.conf.default /usr/local/php/etc/php-fpm.conf
	cp /usr/local/php/etc/php-fpm.d/www.conf.default /usr/local/php/etc/php-fpm.d/www.conf
	cp /home/php-7.2.28/sapi/fpm/init.d.php-fpm /etc/init.d/php-fpm
	修改pid:
	vim /usr/local/php/etc/php-fpm.conf中pid=/usr/local/php/var/run/php-fpm.pid
	
	groupadd php-fpm
	useradd -s /sbin/nologin -g php-fpm -M php-fpm

	启动php-fpm:
	/etc/init.d/php-fpm start/restart/stop

	使用systemctl控制php-fpm服务:
	vim /usr/lib/systemd/system/php-fpm.service
	<<<<<<<<<<<<<<<<
	[Unit]
	Description=The PHP FastCGI Process Manager
	After=syslog.target network.target

	[Service]
	Type=forking
	PIDFile=/usr/local/php/var/run/php-fpm.pid
	ExecStart=/usr/local/php/sbin/php-fpm
	ExecReload=/bin/kill -USR2 $MAINPID
	PrivateTmp=true

	[Install]
	WantedBy=multi-user.target
	>>>>>>>>>>>>>>>>>

	ps -ef | grep php

	添加php环境变量：
	export PATH=$PATH:/usr/local/php/bin
	php -v

3.Mysql安装
	yum -y remove mariadb* boost-*
	yum install -y cmake bison ncurses ncurses-devel

	useradd -M -s /sbin/nologin mysql
	groupadd -r mysql
	
	mkdir -p /usr/local/mysql
	mkdir -p /data/mysql/data
	chown -R 777 mysql:mysql /usr/local/mysql/
	chown -R 777 mysql:mysql /data/mysql/data/

	tar -zxvf mysql-boost-5.7.28.tar.gz
	cmake . -DCMAKE_INSTALL_PREFIX=/usr/local/mysql \
	-DMYSQL_DATADIR=/data/mysql \
	-DSYSCONFDIR=/etc \
	-DWITH_INNOBASE_STORAGE_ENGINE=1 \
	-DWITH_PARTITION_STORAGE_ENGINE=1 \
	-DWITH_FEDERATED_STORAGE_ENGINE=1 \
	-DWITH_BLACKHOLE_STORAGE_ENGINE=1 \
	-DWITH_MYISAM_STORAGE_ENGINE=1 \
	-DENABLED_LOCAL_INFILE=1 \
	-DENABLE_DTRACE=0 \
	-DDEFAULT_CHARSET=utf8 \
	-DDEFAULT_COLLATION=utf8_general_ci \
	-DWITH_EMBEDDED_SERVER=1 \
	-DDOWNLOAD_BOOST=1 \ 
	-DWITH_BOOST=boost \
	make && make install

	cp support-files/mysql.server /etc/init.d/mysqld
	vim /etc/init.d/mysqld
	chmod +x /etc/init.d/mysqld
	systemctl enable mysqld

	vim /etc/my.cnf   自定义配置文件
[client]
port        = 3306
socket      = /tmp/mysql.sock

[mysqld]
port        = 3306
socket      = /tmp/mysql.sock
user = mysql


basedir = /usr/local/mysql
datadir = /data/mysql/data
pid-file = /data/mysql/mysql.pid

log_error = /data/mysql/mysql-error.log
slow_query_log = 1
long_query_time = 1
slow_query_log_file = /data/mysql/mysql-slow.log


skip-external-locking
key_buffer_size = 32M
max_allowed_packet = 1024M
table_open_cache = 128
sort_buffer_size = 768K
net_buffer_length = 8K
read_buffer_size = 768K
read_rnd_buffer_size = 512K
myisam_sort_buffer_size = 8M
thread_cache_size = 16
query_cache_size = 16M
tmp_table_size = 32M
performance_schema_max_table_instances = 1000

explicit_defaults_for_timestamp = true
#skip-networking
max_connections = 500
max_connect_errors = 100
open_files_limit = 65535

log_bin=mysql-bin
binlog_format=mixed
server_id   = 232
expire_logs_days = 10
early-plugin-load = ""

default_storage_engine = InnoDB
innodb_file_per_table = 1
innodb_buffer_pool_size = 128M
innodb_log_file_size = 32M
innodb_log_buffer_size = 8M
innodb_flush_log_at_trx_commit = 1
innodb_lock_wait_timeout = 50

[mysqldump]
quick
max_allowed_packet = 16M

[mysql]
no-auto-rehash

[myisamchk]
key_buffer_size = 32M
sort_buffer_size = 768K
read_buffer = 2M
write_buffer = 2M


	vim /etc/profile  添加环境变量
	export PATH=$PATH:/usr/local/mysql/bin
	source /etc/profile

	/usr/local/mysql/bin/mysqld --initialize-insecure --user=mysql --basedir=/usr/local/mysql --datadir=/usr/local/mysql/data      
	#这样初始化之后，--initialize-insecure数据库是没有密码的
	/usr/local/mysql/bin/mysqld
	mysql -u root -p

4.配置nginx
	
	
5.查看IP地址
	ifconfig
	ip addr
6.目录访问失败file not found
	nginx配置修改：fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
	fpm配置文件www.conf文件修改：user=php-fpm;group=php-fpm
7.






